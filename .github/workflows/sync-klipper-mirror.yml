name: Klipper fork sync

on:
  schedule:
  - cron: "0 */3 * * ?"
  workflow_dispatch:

jobs:
  sync_repo:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_PRIVKEY }}
          owner: Laikulo
          repositories: "Klipper"
          
      - name: Sync klipper fork master branch
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: gh repo sync Laikulo/Klipper -b master
        
      - name: Get current upstream head
        id: get_upstream_head
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "upstream_head=$(git ls-remote https://github.com/Klipper3d/Klipper.git master | cut -f 1)" >> "$GITHUB_OUTPUT"

      - name: Checkout modified workbranch
        uses: actions/checkout@v4
        with:
          repository: 'Laikulo/Klipper'
          ref: 'laikulo-devel'
          token: ${{ steps.generate_token.outputs.token }}
          path: klipper
          fetch-depth: 0
          
      - name: Check if upstream head is in forked work branch
        id: check_if_head_present
        env:
          REF_TO_FIND: ${{ steps.get_upstream_head.outputs.upstream_head }}
        run: |
          cd "$GITHUB_WORKSPACE/klipper"
          branch_list="$(git branch --contains "$REF_TO_FIND" laikulo-devel 2>/dev/null)"
          if [[ $branch_list ]]; then
            RETVAL=true
          else
            RETVAL=false
          fi
          echo "REF_IS_IN_BRANCH=${RETVAL}" | tee -a "$GITHUB_OUTPUT"

      - name: Rebase laikulo branch
        if: ${{ steps.check_if_head_present.outputs.REF_IS_IN_BRANCH == false }}
        run: |
          cd "$GITHUB_WORKSPACE/klipper"
          git fetch https://github.com/Klipper3d/Klipper.git master
          git rebase FETCH_HEAD

      - name: Push rebased branch back
        if: ${{ steps.check_if_head_present.outputs.REF_IS_IN_BRANCH == "false" }}
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          cd "$GITHUB_WORKSPACE/klipper"
          git push -f

        

